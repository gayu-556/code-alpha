#!/usr/bin/env python3

from scapy.all import *
from datetime import datetime
import argparse
import sys

def packet_callback(packet):
    """
    Callback function to process each captured packet
    """
    if packet.haslayer(IP):
        # Get timestamp
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        
        # Extract basic packet information
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst
        protocol = packet[IP].proto
        
        # Get protocol name
        if protocol == 1:
            protocol_name = "ICMP"
        elif protocol == 6:
            protocol_name = "TCP"
        elif protocol == 17:
            protocol_name = "UDP"
        else:
            protocol_name = "Other"
            
        # Get packet size
        packet_size = len(packet)
        
        # Print packet information
        print(f"\n[{timestamp}] Packet captured:")
        print(f"Source IP: {src_ip}")
        print(f"Destination IP: {dst_ip}")
        print(f"Protocol: {protocol_name}")
        print(f"Packet Size: {packet_size} bytes")
        
        # If it's a TCP packet, show port information
        if packet.haslayer(TCP):
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
            print(f"Source Port: {src_port}")
            print(f"Destination Port: {dst_port}")
            
        # If it's a UDP packet, show port information
        elif packet.haslayer(UDP):
            src_port = packet[UDP].sport
            dst_port = packet[UDP].dport
            print(f"Source Port: {src_port}")
            print(f"Destination Port: {dst_port}")

def main():
    # Set up argument parser
    parser = argparse.ArgumentParser(description='Basic Network Sniffer')
    parser.add_argument('-i', '--interface', help='Network interface to capture packets from', default=None)
    parser.add_argument('-c', '--count', help='Number of packets to capture (0 for infinite)', type=int, default=0)
    args = parser.parse_args()

    print("Starting network sniffer...")
    print("Press Ctrl+C to stop")
    print("-" * 50)

    try:
        # Start sniffing packets
        sniff(iface=args.interface,
              prn=packet_callback,
              count=args.count,
              store=0)
    except KeyboardInterrupt:
        print("\nSniffing stopped by user")
        sys.exit(0)
    except Exception as e:
        print(f"An error occurred: {e}")
        sys.exit(1)

if _name_ == "_main_":
    main()